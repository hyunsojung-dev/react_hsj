{"version":3,"sources":["logo.svg","loginComponents/AuthRoute.js","loginComponents/LoginForm.js","loginComponents/logoutForm.js","problemComponents/create.js","problemComponents/edit.js","problemComponents/listView.js","containers/Problem.js","containers/First-Home.js","evaluationComponets/yeardataList.js","containers/evaluation.js","Dash.js","serviceWorker.js","index.js","loginComponents/auth.js"],"names":["module","exports","AuthRoute","authenticated","Component","component","render","rest","props","to","pathname","state","from","location","btnStyle","color","background","width","padding","border","borderRadius","fontSize","lineHeight","textAlign","marginTop","useStyles","makeStyles","theme","root","margin","spacing","item","container","display","flexWrap","textField","LoginForm","login","classes","useState","user_email","setEmail","user_name","setName","user_password","setPW","user_birthday","setBIRTH","visible","setVB","setERROR","login_email","setlogin_Email","login_password","setlogin_PW","React","open","setOpen","closeModal","handleClose","event","reason","style","marginLeft","className","noValidate","autoComplete","TextField","required","id","label","defaultValue","variant","value","onChange","target","type","onClick","console","log","newUser","axios","post","then","response","catch","error","res","data","e","alert","Snackbar","autoHideDuration","onClose","elevation","severity","Button","effect","onClickAway","float","overlapEmail","getoverlaps","InputLabelProps","shrink","length","href","withRouter","logout","history","marginRight","push","CreateTodo","onChangeTodoDescription","bind","onChangeTodoResponsible","onChangeTodoPriority","onSubmit","todo_description","todo_responsible","todo_priority","todo_createdAt","Date","now","this","setState","preventDefault","todo_indexnumber","newTodo","TextareaAutosize","aria-label","rows","placeholder","name","checked","onChangecreateAt","EditTodo","obj","match","params","Todo","index","todo","format","_id","method","action","TodosList","todos","get","map","currentTodo","i","key","Table","striped","bordered","hover","size","todoList","Problem","exact","path","Problem_Info","problem","problem_info","Problem_Answer","problem_answer","Home","number","problems","showPopup","random","onChangeClick","questionList","randNum","answer","result_problem","result_answer","result_index","rand","Math","floor","onView_ProblemInfo","modal","trigger","onView_ProblemAnswer","bluegrey_primary","blueGrey","TableRow","TableCell","scope","problem_index","align","problem_year","flexGrow","backgroundColor","palette","paper","height","tabs","borderRight","divider","overflowX","table","minWidth","ScrollButton","intervalId","window","pageYOffset","clearInterval","scroll","scrollStepInPx","setInterval","scrollStep","delayInMs","title","scrollToTop","problemList","handleChangeIndexUP","page","start","end","handleChangeIndexDown","slice","Paper","TableHead","TableBody","yearProblemList","NavDropdown","Item","yeardataList_2018","Copyright","Typography","Link","getFullYear","menuButton","list","fullList","AppBar","Box","marginBottom","Boolean","hostname","ReactDOM","side","user","setUser","email","undefined","Error","signIn","top","left","bottom","right","toggleDrawer","position","Toolbar","IconButton","edge","noWrap","Drawer","role","onKeyDown","Divider","ListItem","button","ListItemIcon","ListItemText","primary","ListSubheader","inset","Homeview","pt","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.460aa81c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nfunction AuthRoute({ authenticated, component: Component, render, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated ? (\n          render ? render(props) : <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: '/login', state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default AuthRoute;","import React, { useState } from 'react';\nimport { Redirect, BrowserRouter as Router } from 'react-router-dom';\n// import { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport Modal from 'react-awesome-modal';\nimport '../css/LoginForm.css';\n// import { Left } from 'react-bootstrap/lib/Media';\n//import Image from '../../img/iconlogin.png';\n// material-ui 사용 : styles, textField, button, alert\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nconst btnStyle = {\n  color: \"white\",\n  background: \"black\",\n  width: \"300px\",\n  padding: \".375rem .75rem\",\n  border: \"1px solid white\",\n  borderRadius: \".25rem\",\n  fontSize: \"1rem\",\n  lineHeight: 1.5,\n  textAlign:\"center\",\n  marginTop: 10\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      //width: 330,\n    },\n  },\n  item:{\n    marginTop: 5,\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginTop: 15,\n  },\n  textField: {\n    // marginLeft: theme.spacing(1),\n    // marginRight: theme.spacing(1),\n    width: 230,\n  }\n}));\n\nfunction LoginForm({ authenticated, login, location }) {\n  // style\n  const classes = useStyles();\n\n  // 회원가입을 위한 DB setting\n  const [user_email, setEmail] = useState('');\n  const [user_name, setName] = useState('');\n  const [user_password, setPW] = useState('');\n  const [user_birthday, setBIRTH] = useState('');\n  const [visible, setVB] = useState('');\n  const [error, setERROR] = useState('');\n  // 로그인 form DB setting\n  const [login_email, setlogin_Email] = useState('');\n  const [login_password, setlogin_PW] = useState('');\n  //alert snckbar \n  const [open, setOpen] = React.useState(false);\n\n  const openModal = () => {\n      setVB(true);\n      // this.setState({  visible : true  });\n  }\n\n  const closeModal =() => {\n      setVB(false);\n      // this.setState({  visible : false  });\n    }\n\n  // server&DB 에서 유효성 검사 후 유효 혹은 에러 발생\n  const getUsers = (newUser) => {\n    return axios.post('/login/user', newUser)\n    .then(response => { \n      console.log(response)\n    })\n    .catch(error => {\n        console.log(error.response)\n    });\n    \n    // try {\n    //   return \n    //   // axios.post('/login/user', newUser);\n    // } catch (error) {\n    //   console.error(error)\n    // }\n  };\n  const getoverlaps = (overlapEmail) => {\n    return axios.post('/login/sign/overlap', overlapEmail)\n    .then(response => { \n      console.log(response)\n    })\n    .catch(error => {\n        console.log(error.response)\n    });\n    // try {\n    //   // return axios.post('/login/sign/overlap', overlapEmail);\n    // } catch (error) {\n    //   console.error(error)\n    // }\n  };\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  const onSubmit = () => {\n    try {\n      console.log(`로그인 입력 정보`);\n      console.log(`commnet text: ${login_email}`);\n      console.log(`commnet user: ${login_password}`);\n\n      const newLogin = {\n        login_email: login_email,\n        login_password: login_password\n      };\n      const usrs = getUsers(newLogin).then(res => {\n        if (res.data===login_email){\n          console.log(res.data);\n          login({ login_email, login_password });\n        }\n        else if (res.data==='false'){\n          //alert('로그인 실패, 다시 시도해주세요.');\n          setOpen(true);\n          console.log('=> err_location : react login form에서 로그인 실패.');\n          setlogin_Email('');\n          setlogin_PW('');\n        }\n      })\n      \n    } catch (e) {\n      alert('Failed to login');\n      setlogin_Email('');\n      setlogin_PW('');\n    }\n  }\n  const SignOnclick = () => {\n    try {\n      console.log(`회원가입 정보`);\n      console.log(`user_email: ${user_email}`);\n      console.log(`user_name: ${user_name}`);\n      console.log(`user_name: ${user_birthday}`);\n      console.log(`user_password: ${user_password}`);\n      \n      if (user_password.length > 6 ){\n        const newUser = {\n          user_email: user_email,\n          user_name: user_name,\n          user_birthday: user_birthday,\n          user_password: user_password\n        };\n        axios.post('/login/sign/add', newUser)\n            .then(res => console.log(res.data))\n            .catch(function (error) {\n              if (error){\n                console.log(error.res);\n                alert('중복 아이디가 있습니다.');\n                setERROR('err');\n              }\n              else if(error!=='err') {\n              }\n          })\n        //alert('회원가입 성공!');\n        setEmail('');\n        setPW('');\n        setName('');\n        setBIRTH('');\n        setVB(false);\n      }\n      else {\n        alert('비밀번호 6자리 이상 입력해주세요.');\n      }\n\n    } catch (e) {\n      alert('회원가입 실패, 다시 시도해주세요.');\n      // setEmail('');\n      setPW('');\n      setName('');\n      setBIRTH('');\n    }\n  } \n\n  const overlap = () => {\n    const overlapEmail = {\n      user_email: user_email\n    };\n    const overs = getoverlaps(overlapEmail).then(res => {\n      if (res.data==='false'){\n        alert('중복 아이디 존재');\n      }\n      else if(res.data===\"\"){\n        alert('아이디를 입력해주세요.');\n      }\n      else if (res.data==='true'){\n        alert('아이디 사용가능');\n      }\n    }) \n\n  }\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const { from } = location.state || { from: { pathname: \"/\" } };\n  if (authenticated) return <Redirect to={from} />;\n\n  return (\n    <><Router>\n    <div style={{margin: 25}}>      \n    <div style={{marginLeft: 10}}>LOGIN</div>\n      <form className={classes.root} noValidate autoComplete=\"off\">\n      {/* <form noValidate autoComplete=\"off\"> */}\n        <div style={{width: 300}} >\n        <TextField\n          required\n          id=\"filled-required\"\n          label=\"Email\"\n          defaultValue=\"Hello World\"\n          variant=\"filled\"\n          value={login_email} onChange={({ target: { value } }) => setlogin_Email(value)}\n        />\n        </div>\n        <div className={classes.item}>\n        <TextField\n          id=\"filled-password-input\"\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"filled\"\n          value={login_password} onChange={({ target: { value } }) => setlogin_PW(value)}\n        />\n        </div>\n        <div >\n        {/* <Button variant=\"outlined\" onClick={onSubmit} >submit</Button> */}\n        <button style={btnStyle} onClick={onSubmit} >submit</button>\n\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\" >가입되지 않은 아이디이거나, 잘못된 패스워드 입니다.</Alert>\n        </Snackbar>\n        {/* </div> */}\n        <section>\n          {/* <button style={btnStyle} onClick={openModal} >회원가입</button> */}\n              <Button variant=\"outlined\" onClick={openModal} > 회원가입 </Button>              \n                {/* <Modal visible={visible} width=\"400\" height=\"400\" effect=\"fadeInUp\"   onClickAway={closeModal}> */}\n                <Modal visible={visible} effect=\"fadeInUp\"   onClickAway={closeModal}>\n                    <div>\n                      <div>\n                        <div className=\"register-header\">회원가입</div>   \n                        {/* <div style={{ marginLeft: 20}}> */}\n                        <div className=\"register-item\">\n                        <form className={classes.root} noValidate autoComplete=\"off\">\n                          <div style={{ float: \"left\"}} >                            \n                            <TextField id=\"standard-basic\" label=\"email\"  \n                              className={classes.textField}                           \n                              // defaultValue=\"email\"\n                              value={user_email}\n                              onChange={({ target: { value } }) => setEmail(value)}  />   \n                              <Button variant=\"outlined\" onClick={overlap} > 검사 </Button>                         \n                          </div>\n                          <div>\n                          <TextField  id=\"standard-password-input\" label=\"password\" \n                            className={classes.textField}\n                            autoComplete=\"current-password\"\n                            defaultValue=\"password\" \n                            value={user_password}\n                            onChange={({ target: { value } }) => setPW(value)}\n                            type=\"password\"  />\n                          </div>\n                          <div>\n                            <TextField id=\"standard-basic\" label=\"name\" \n                               className={classes.textField}\n                                // defaultValue=\"email\"\n                                value={user_name}\n                                onChange={({ target: { value } }) => setName(value)}  />\n                          </div>\n                          <div className={classes.container} noValidate>\n                            <TextField    id=\"date\"  label=\"Birthday\"  type=\"date\"  defaultValue=\"2020-01-01\"\n                              className={classes.textField}\n                              InputLabelProps={{\n                                shrink: true,\n                              }}\n                              value={user_birthday}\n                              onChange={({ target: { value } }) => setBIRTH(value)}   />\n                          </div>\n                          <div style={{ marginTop: 15}}>\n                              <Button variant=\"outlined\" onClick={SignOnclick} >submit</Button> </div> \n                          <div style={{ textAlign: \"left\", margin: 15}}>\n                              <a href=\"javascript:void(0);\" onClick={closeModal}>Close</a>   </div>                          \n                        </form>    \n                        </div>                                     \n                      </div>                        \n                    </div>\n                </Modal>\n            </section>\n            </div>\n        </form>\n      </div>     \n    </Router>\n   </>\n  );\n}\n\nexport default LoginForm;","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nfunction LogoutButton({ logout, history }) {\n  const handleClick = () => {\n    logout();\n    history.push('/');\n  }\n  return <div style={{ float: \"right\", marginRight: 5, fontSize: 15}}><Link onClick={handleClick} >Logout</Link></div>;\n}\n\nexport default withRouter(LogoutButton);","import React, { Component } from 'react';\nimport axios from 'axios';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: 200,\n      },\n    },\n  }));\n\nexport default class CreateTodo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_createdAt: Date.now,\n        }\n    }\n\n\n    onChangeTodoDescription(e) {\n        this.setState({\n            todo_description: e.target.value\n        });\n    }\n\n    onChangeTodoResponsible(e) {\n        this.setState({\n            todo_responsible: e.target.value\n        });\n    }\n\n    onChangeTodoPriority(e) {\n        this.setState({\n            todo_priority: e.target.value\n        });\n    }\n    onChangecreateAt(e) {\n        this.setState({\n            todo_createdAt: e.target.value\n        });\n    }\n\n  onSubmit(e) {\n    e.preventDefault();\n    \n    console.log(`Form submitted:`);\n    console.log(`commnet index: ${this.state.todo_indexnumber}`);\n    console.log(`commnet text: ${this.state.todo_description}`);\n    console.log(`commnet user: ${this.state.todo_responsible}`);\n    console.log(`commnet Priority: ${this.state.todo_priority}`);\n    console.log(`commnet createdDate: ${this.state.todo_createdAt}`);\n \n    const newTodo = {\n        todo_description: this.state.todo_description,\n        todo_responsible: this.state.todo_responsible,\n        todo_priority: this.state.todo_priority,\n        todo_createdAt: this.state.todo_createdAt\n    };\n    // axios.post('/Problem/create', {\n    //     todo_description: '',\n    //     todo_responsible: '',\n    //     todo_priority: '',\n    //     todo_completed: false\n    // })\n    // .then(response => { \n    //     console.log(response)\n    // })\n    // .catch(error => {\n    //     console.log(error.response)\n    // });\n\n    axios.post('/Problem/add', newTodo)\n        .then(res => console.log(res.data));\n\n    this.setState({\n        todo_description: '',\n        todo_responsible: '',\n        todo_priority: '',\n        todo_createdAt: ''\n    })\n    this.props.history.push('/Problem/');\n}\n\n    render() {\n        return (\n            <div style={{margin: 25}}>\n                <h3>Create New Problem</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\"> \n                        <label>문제 : </label>\n                            <TextareaAutosize aria-label=\"minimum height\" rows={3} placeholder=\"요청하시고자 하는 문제의 상세 내용을 적어주세요.\" \n                                className=\"form-control\"\n                                value={this.state.todo_description}\n                                onChange={this.onChangeTodoDescription} /> \n                        {/* <input  type=\"text\"\n                                className=\"form-control\"\n                                rows={3} placeholder=\"Minimum 3 rows\"\n                                value={this.state.todo_description}\n                                onChange={this.onChangeTodoDescription}\n                                /> */}\n                      \n                    </div>\n                    <div className=\"form-group\">\n                        <label>정답: </label>\n                        <TextareaAutosize aria-label=\"minimum height\" rows={1} placeholder=\"문제 정답\" \n                                className=\"form-control\"\n                                value={this.state.todo_responsible}\n                                onChange={this.onChangeTodoResponsible}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\" \n                                    type=\"radio\" \n                                    name=\"priorityOptions\" \n                                    id=\"priorityLow\" \n                                    value=\"Low\"\n                                    checked={this.state.todo_priority==='Low'} \n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">Low</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\" \n                                    type=\"radio\" \n                                    name=\"priorityOptions\" \n                                    id=\"priorityMedium\" \n                                    value=\"Medium\" \n                                    checked={this.state.todo_priority==='Medium'} \n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">Medium</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\" \n                                    type=\"radio\" \n                                    name=\"priorityOptions\" \n                                    id=\"priorityHigh\" \n                                    value=\"High\" \n                                    checked={this.state.todo_priority==='High'} \n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">High</label>\n                        </div>\n                    </div>\n                    <div className=\"form-group\" onChange={this.onChangecreateAt}>{this.state.todo_createdAt} </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"new problem\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default class EditTodo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\n        this.onChangecreateAt = this.onChangecreateAt.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_createdAt: Date.now\n        }\n    }\n    // componentDidMount() {\n    //     axios.get('/Problem/edit/'+this.props.match.params.id)\n    //         .then(response => {\n    //             this.setState({\n    //                 todo_description: response.data.todo_description,\n    //                 todo_responsible: response.data.todo_responsible,\n    //                 todo_priority: response.data.todo_priority,\n    //                 todo_createdAt: response.data.todo_createdAt\n    //             })   \n    //         })\n    //         .catch(function (error) {\n    //             console.log(error);\n    //         })\n    // }\n\n    onChangeTodoDescription(e) {\n        this.setState({\n            todo_description: e.target.value\n        });\n    }\n\n    onChangeTodoResponsible(e) {\n        this.setState({\n            todo_responsible: e.target.value\n        });\n    }\n\n    onChangeTodoPriority(e) {\n        this.setState({\n            todo_priority: e.target.value\n        });\n    }\n    onChangecreateAt(e) {\n        this.setState({\n            todo_createdAt: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const obj = {\n            todo_description: this.state.todo_description,\n            todo_responsible: this.state.todo_responsible,\n            todo_priority: this.state.todo_priority,\n            todo_createdAt: this.state.todo_createdAt\n        };\n        console.log(obj);\n        axios.post('/Problem/edit/'+this.props.match.params.id, obj)\n            .then(res => console.log(res.data));\n        \n        this.props.history.push('/Problem/');\n    }\n\n    render() {\n        return (\n            <div style={{margin: 25}}>\n                {/* <h3 align=\"center\">Update Problem</h3> */}\n                <h3>Update Problem</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\"> \n                        <label>문제: </label>\n                        <TextareaAutosize aria-label=\"minimum height\" rows={3} placeholder=\"요청하시고자 하는 문제의 상세 내용을 적어주세요.\" \n                                className=\"form-control\"\n                                value={this.state.todo_description}\n                                onChange={this.onChangeTodoDescription}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>정답: </label>\n                        <TextareaAutosize aria-label=\"minimum height\" rows={1} placeholder=\"문제 정답\" \n                                className=\"form-control\"\n                                value={this.state.todo_responsible}\n                                onChange={this.onChangeTodoResponsible}\n                                />\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\" \n                                    type=\"radio\" \n                                    name=\"priorityOptions\" \n                                    id=\"priorityLow\" \n                                    value=\"Low\"\n                                    checked={this.state.todo_priority==='Low'} \n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">Low</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\" \n                                    type=\"radio\" \n                                    name=\"priorityOptions\" \n                                    id=\"priorityMedium\" \n                                    value=\"Medium\" \n                                    checked={this.state.todo_priority==='Medium'} \n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">Medium</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\" \n                                    type=\"radio\" \n                                    name=\"priorityOptions\" \n                                    id=\"priorityHigh\" \n                                    value=\"High\" \n                                    checked={this.state.todo_priority==='High'} \n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">High</label>\n                        </div>\n                    </div>\n                    <div className=\"form-group\" onChange={this.onChangecreateAt}>{this.state.todo_createdAt} </div>\n                    {/* <div className=\"form-check\">\n                        <input  className=\"form-check-input\"\n                                id=\"completedCheckbox\"\n                                type=\"checkbox\"\n                                name=\"completedCheckbox\"\n                                onChange={this.onChangeTodoCompleted}\n                                checked={this.state.todo_completed}\n                                value={this.state.todo_completed}\n                                />\n                        <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\n                            Completed\n                        </label>                        \n                    </div> */}\n\n                    <br/>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"update problem\" className=\"btn btn-primary\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport axios from 'axios';\n//import Dialog from 'react-bootstrap-dialog'\nimport Moment from 'react-moment';\n// import trashImage from '../../../../src/img/icon-trash.png';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Table } from 'react-bootstrap';\n\nconst btnStyle = {\n    color: \"white\",\n    background: \"white\",\n    //padding: \".375rem .75rem\",\n    border: \"1px solid white\",\n    borderRadius: \".25rem\",\n   // fontSize: \"1rem\",\n    lineHeight: 1.5\n  };\nconst Todo = props => (\n    \n    <tr>\n    <td>{props.index}</td>\n    {/* 문 제 */}\n    <td>{props.todo.todo_description}</td> \n    {/* 정 답 */}\n    <td>{props.todo.todo_responsible}</td>\n    {/* 어려운 정도 */}\n    {/* <td>{props.todo.todo_priority}</td> */}\n    <td><Moment format=\"YYYY/MM/DD\">{props.todo.todo_createdAt}</Moment></td>\n    <td>\n        {/* <Link to={\"/Problem/edit/\"+props.todo._id} className=\"btn btn-primary\" >Edit</Link> */}\n        <Link to={\"/Problem/edit/\"+props.todo._id} >수정</Link>\n    </td>\n    <td> \n        <form method='POST' action={`/Problem/delete/${props.todo._id}` } >\n            <button style={btnStyle} ><DeleteIcon/></button>\n         </form>\n    </td>\n</tr>\n   \n)\n\nexport default class TodosList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {todos: []};\n        //this.onDeletebutton = this.onDeletebutton.bind(this);\n    }\n    \n    componentDidMount() {\n        axios.get('https://hyunsojung-dev.github.io/react_hsj/Problem/')\n            .then(response => {\n                this.setState({ todos: response.data });\n            })\n            .catch(function (error){\n                console.log(error);\n            })\n    }\n\n    onSubmit(id) {\n        console.log(id);\n        axios.post('/Problem/delete/'+this.props.match.id, id)\n            .then(res => console.log(res.data));\n        \n        this.props.history.push('/Problem/');\n    }\n\n    // 배열에서 map() 함수를 활용해 part id 배열을 만듬\n    todoList() {\n        var data = this.state.todos;\n        return data.map(function(currentTodo, i){\n            return <Todo todo={currentTodo} key={i} index={i+1}/> ;\n        })\n\n    }\n\n    render() {\n        return (\n            <div>\n                {/* <h3>List</h3> */}\n                <Table striped bordered hover size=\"sm\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>문제</th>\n                            <th>정답</th>\n                            {/* <th>단계</th> */}\n                            <th>Date</th>\n                            <th>Action</th>\n                            <th>delete</th>\n                        </tr>\n                    </thead>\n                    <tbody >\n                        { this.todoList() }                                  \n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n//import './problem.css';\nimport axios from 'axios';\n//import axios from 'axios';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import { ButtonToolbar, Button, Form, ormControl  } from 'react-bootstrap';\nimport CreateTodo from \"../problemComponents/create\";\nimport EditTodo from \"../problemComponents/edit\";\nimport TodosList from \"../problemComponents/listView\";\n\nvar style = {\n  container:{\n    padding: 10\n  }\n}\n\nclass Problem extends Component {\n\n\n    render() {\n\n    return (\n      <Router>\n      <div style={style.container}>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">       \n          <Link to=\"/Problem/\" className=\"navbar-brand\">문제요청리스트</Link>\n          <div className=\"collpase navbar-collapse\">\n            <ul className=\"navbar-nav mr-auto\">\n              {/* <li className=\"navbar-item\">\n                <Link to=\"/Problem/list\" className=\"nav-link\">Todos</Link>\n              </li> */}\n              <li className=\"navbar-item\">\n                <Link to=\"/Problem/create\" className=\"nav-link\">요청</Link>\n              </li>\n            </ul>\n          </div>\n          \n        </nav>\n        <br/>\n        <Route exact path=\"/Problem/\" component={TodosList} />\n        <Route path=\"/Problem/edit/:id\" component={EditTodo} />\n        <Route path=\"/Problem/create\" component={CreateTodo} />\n      </div>\n    </Router>\n      // <Router>\n      //   <div className=\"container\">\n      //     <div className=\"menu\">\n      //           <MenuItem to={'/Problem/'} exact component={TodosList} >todolist</MenuItem>\n      //           <MenuItem to={'/Problem/edit/:id'} component={EditTodo} >edit</MenuItem>\n      //           <MenuItem to={'/Problem/create'} component={CreateTodo} >create</MenuItem>\n      //       </div>\n\n      //   </div>\n      // </Router>\n    );\n  }\n}\n\nexport default Problem;\n","import React, { Component } from 'react';\nimport '../css/Home.css'; \nimport Popup from \"reactjs-popup\";\n//import { ButtonToolbar, Button, Form, Modal  } from 'react-bootstrap';\n//import { textAlign } from '@material-ui/system';\nimport axios from 'axios';\n\nconst Problem_Info = props => ( \n  <tr>\n    <td>{props.problem.problem_info}</td>\n  </tr>  \n)\nconst Problem_Answer = props => ( \n  <tr>\n    <td>{props.problem.problem_answer}</td>\n  </tr>  \n)\nconst btnStyle = {\n  color: \"white\",\n  background: \"black\",\n  padding: \".375rem .75rem\",\n  border: \"1px solid white\",\n  borderRadius: \".25rem\",\n  fontSize: \"1rem\",\n  lineHeight: 1.5,\n  textAlign:\"center\",\n  marginTop: 25\n};\n\nclass Home extends Component {\n\n  // 상태(state)는 컴포넌트의 상태를 나타냄. 변화할 수 있는 데이터의 집합\n  state = {\n    number: 0\n  }\n  //list에서 무엇을 가져올지 지정해준 후 객체를 넘겨준다. this.setState사용\n  searchList(questionList, randNum){\n    console.log(questionList[randNum-1]['problem']);\n    const index = questionList[randNum-1]['num'];\n    const problem = questionList[randNum-1]['problem'];\n    const answer = questionList[randNum-1]['answer'];\n    this.setState({ result_problem: problem, result_answer: answer, result_index: index });\n  }\n  //프로퍼티(props) 외부에서 컴포넌트와 소통하는 창구 역할. 일반적으로 프로퍼티의 값은 부모 요소에서 설정. \n  //또한 한 번 설정된 프로퍼티는 기본적으로 컴포넌트 내부에서 변경 X, 프로퍼티는 초깃값 설정과 자료형 유효성 검사 등을 사용할 수 있음\n  constructor(props) {\n    super(props);\n    this.state = {problems: [], showPopup: false, random: 0};\n    this.onChangeClick = this.onChangeClick.bind(this);\n    // // 초기 값 설정 가능\n    // this.state = { showPopup: false, random: 1 }; \n  }\n  componentDidMount() {\n    axios.get('http://hyunsojung-dev.github.io/view/')\n        .then(response => {\n            this.setState({ problems: response.data });\n        })\n        .catch(function (error){\n            console.log(error);\n          })\n  }\n\n  onView_ProblemInfo(){\n    var data = this.state.problems;\n    return data.map(function(currentTodo, i){\n      return <Problem_Info problem={currentTodo} key={i}/> ;\n    })\n  }\n  onView_ProblemAnswer(){\n    var data = this.state.problems;\n    return data.map(function(currentTodo, i){\n      return <Problem_Answer problem={currentTodo} key={i}/> ;\n    })\n  }\n  \n  onChangeClick() {\n    const min = 1;\n    const max = 117;\n    const rand = Math.floor(Math.random()*(max+1-min))+min;\n    console.log(rand);\n    this.setState({ random: rand });\n    // this.searchList(list, rand);\n    // this.searchProblemList(this.state.problems[rand-1]['problem_index'], rand)\n    //this.NumberList(problems, rand);\n  }\n  render() {\n    return (       \n        <div  style={{marginTop: 30 }}>\n          <div style={{textAlign: \"center\", width: \"70%\", margin: \"auto\" }}>  \n            { this.onView_ProblemInfo()[this.state.random] }  \n            <div className=\"button-style\">\n            <button style={btnStyle} onClick={this.onChangeClick.bind(this) } >NEXT</button>\n            <Popup modal trigger={<button style={btnStyle} >ANSWER</button>} >\n              <div style={{ marginTop: 15, textAlign:\"center\", fontSize: \"1rem\"}}>ANSWER</div>\n              <div style={{ margin: 30, textAlign:\"center\", fontSize: \"1rem\"}} >{ this.onView_ProblemAnswer()[this.state.random] } </div>\n            </Popup>\n           </div>              \n        </div>       \n        </div>\n    );\n  }\n}\nexport default Home;\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport axios from 'axios';\n//import Dialog from 'react-bootstrap-dialog'\n// import Moment from 'react-moment';\n// import trashImage from'../icon-trash.png';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport ChevronLeftTwoToneIcon from '@material-ui/icons/ChevronLeftTwoTone';\nimport ChevronRightTwoToneIcon from '@material-ui/icons/ChevronRightTwoTone';\nimport SkipPreviousTwoToneIcon from '@material-ui/icons/SkipPreviousTwoTone';\nimport SkipNextTwoToneIcon from '@material-ui/icons/SkipNextTwoTone';\nimport NavigationTwoToneIcon from '@material-ui/icons/NavigationTwoTone';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nconst bluegrey_primary = blueGrey[900];\n\nconst Problem = props => ( \n      <TableRow >  \n        <TableCell component=\"th\" scope=\"row\">{props.problem.problem_index}</TableCell>\n        <TableCell align=\"left\">{props.problem.problem_info}</TableCell>\n        <TableCell align=\"left\">{props.problem.problem_answer}</TableCell>\n        <TableCell align=\"left\">{props.problem.problem_year}</TableCell>\n      </TableRow>\n)\n\nconst btnStyle = {\n  color: bluegrey_primary,\n  background: \"white\",\n  padding: \".375rem .75rem\",\n  border: \"1px solid white\",\n  borderRadius: \".25rem\",\n  fontSize: \"10\",\n  lineHeight: 1.5,\n  textAlign:\"center\",\n  marginTop: 15,\n\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      padding: 10,\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper,\n      display: 'flex',\n      height: 224,\n    },\n    tabs: {\n      borderRight: `1px solid ${theme.palette.divider}`,\n    },\n    paper: {\n      width: '100%',\n      overflowX: 'auto',\n    },\n    table: {\n      minWidth: 500,\n    },\n  }));\n\n  class ScrollButton extends React.Component {\n    constructor() {\n      super();\n  \n      this.state = {\n          intervalId: 0\n      };\n    }\n    \n    scrollStep() {\n      if (window.pageYOffset === 0) {\n          clearInterval(this.state.intervalId);\n      }\n      window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\n    }\n    \n    scrollToTop() {\n      let intervalId = setInterval(this.scrollStep.bind(this), this.props.delayInMs);\n      this.setState({ intervalId: intervalId });\n    }\n    \n    render () {\n        return <button style={btnStyle} title='Back to top' className='scroll' \n                 onClick={ () => { this.scrollToTop(); }}>\n                  <span className='arrow-up glyphicon glyphicon-chevron-up'></span>\n                  <NavigationTwoToneIcon/>\n                </button>;\n     }\n  } \n\nexport default class problemList extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {problems: [], page:1, start:0, end:10};\n        this.handleChangeIndexUP = this.handleChangeIndexUP.bind(this);\n        this.handleChangeIndexDown = this.handleChangeIndexDown.bind(this);\n        //this.onDeletebutton = this.onDeletebutton.bind(this);\n    }\n\n    handleChangeIndexUP = () => {\n      const {page, start, end} = this.state;\n      if(end > this.state.problems.length) return;\n      this.setState({\n        page: page+1,\n        start: start +10,\n        end: end+10\n      });\n    };\n\n    handleChangeIndexDown = () => {\n      const {page, start, end} = this.state;\n      if(start===0) return;\n      this.setState({\n        page: page -1,\n        start: start -10,\n        end: end-10\n      })\n    };\n\n    componentDidMount() {\n        axios.get('http://localhost:7376/comment/2018')\n            .then(response => {\n                this.setState({ problems: response.data });\n            })\n            .catch(function (error){\n                console.log(error);\n            })\n    }\n\n    yearProblemList() {\n        var data = this.state.problems;\n        return data.slice(this.state.start, this.state.end).map(function(currentTodo, i){\n            return <Problem problem={currentTodo} key={i} /> ;\n        })\n    }\n\n    render() {\n        return (\n          <div >         \n            <div className={useStyles.root}>\n              <Paper className={useStyles.paper}>\n                <Table className={useStyles.table} size=\"small\" aria-label=\"a dense table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell >#</TableCell>\n                      <TableCell align=\"left\" >문제</TableCell>\n                      <TableCell align=\"left\">정답</TableCell>\n                      <TableCell align=\"left\">년도</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                          { this.yearProblemList() }  \n                  </TableBody>\n                </Table>\n              </Paper>\n            </div>\n            <div style={{ float: \"right\"}}>\n              <button style={btnStyle} onClick={this.handleChangeIndexDown.bind(this)}> <ChevronLeftTwoToneIcon/></button>\n              <dic style={btnStyle} >{this.state.page}</dic>\n              <button style={btnStyle} onClick={this.handleChangeIndexUP.bind(this)}> <ChevronRightTwoToneIcon/> </button>\n            </div>\n            <ScrollButton scrollStepInPx=\"50\" delayInMs=\"16.66\">  </ScrollButton>\n             {/* <div> {this.state.start} </div> <div> {this.state.end} </div> */}\n        </div>\n           \n        )\n    }\n}","import React, { Component } from 'react';\n//import './problem.css';\n\n//import axios from 'axios';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { NavDropdown } from 'react-bootstrap';\n\nimport yeardataList_2018 from \"../evaluationComponets/yeardataList\";\n\n\nvar style = {\n  container:{\n    padding: 10\n  }\n}\n\nclass Problem extends Component {\n\n  render() {\n\n    return (\n      <Router>\n      <div style={style.container}>\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">       \n          <Link to=\"/comment/\" className=\"navbar-brand\">연도별 문제 리스트</Link>\n\n          <NavDropdown title=\"YEAR\" id=\"basic-nav-dropdown\" to=\"/comment/2018\">\n            <NavDropdown.Item className=\"nav-link\" ><Link to=\"/comment/2018\" className=\"nav-link\">2018</Link></NavDropdown.Item>\n            <NavDropdown.Item className=\"nav-link\" ><Link to=\"/comment/2019\" className=\"nav-link\">2019</Link></NavDropdown.Item>\n            <NavDropdown.Item className=\"nav-link\" ><Link to=\"/comment/2020\" className=\"nav-link\">2020</Link></NavDropdown.Item>\n          </NavDropdown>\n          \n        </nav>\n        <br/>\n        <Switch>        \n            <Route path=\"/comment/2018\" component={yeardataList_2018} />\n        </Switch>\n      </div>\n    </Router>\n \n    );\n  }\n}\n\nexport default Problem;\n","import React, { useState, useEffect } from 'react';\n// react version 4 이기 때문에 react-router가 아니라 react-router-dom을 사용해야함 (버전마다 상이하게 다름)\n// 리액트 v3 정적라우팅 , v4 동적 라우팅\nimport { Link, Route, Switch, BrowserRouter as Router } from 'react-router-dom';\n\nimport { signIn } from './loginComponents/auth';\nimport AuthRoute from './loginComponents/AuthRoute';\nimport LoginForm from './loginComponents/LoginForm';\nimport LogoutButton from './loginComponents/logoutForm';\nimport Problem from './containers/Problem';\nimport Homeview from './containers/First-Home';\nimport YearComment from './containers/evaluation'\n// list_item 설정\n// @material-ui 설정\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\n// import Grid from '@material-ui/core/Grid';\n// import Paper from '@material-ui/core/Paper';\nimport Link2 from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n// import NotificationsIcon from '@material-ui/icons/Notifications';\n\n// list ui를 위한 패키지 설정\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AnnouncementRoundedIcon from '@material-ui/icons/AnnouncementRounded';\nimport CreateRoundedIcon from '@material-ui/icons/CreateRounded';\nimport ImportContactsRoundedIcon from '@material-ui/icons/ImportContactsRounded';\n\n// 대쉬보드 메인 색 변경\n// import green from '@material-ui/core/colors/green';\n// const green_primary = green[800];\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nconst bluegrey_primary = blueGrey[900];\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link2 color=\"inherit\" href=\"https://hyunsojung-dev.github.io/react_hsj/\">\n        정보처리기사\n      </Link2>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n//const drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  AppBar: {\n    background: bluegrey_primary,\n  },\n  Box: {\n    marginBottom: 10,\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  // user \n  const [user, setUser] = useState(null);\n  const authenticated = user != null;\n  const login = ({ email, name }) => setUser(signIn({ email, name }));\n  const logout = () => setUser(null);\n  // drawer 기능\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setState({ ...state, [side]: open });\n  };\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <Divider />\n          <div>\n              <Link to=\"/\" >\n              <ListItem button>\n                <ListItemIcon>\n                  <AnnouncementRoundedIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"문제 풀기\" /> \n              </ListItem> \n              </Link>    \n              <Link to=\"/Problem\" >\n              <ListItem button>\n                <ListItemIcon>\n                  <CreateRoundedIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"문제 요청\" />\n              </ListItem>\n              </Link>\n              <Link to=\"/comment\" >\n              <ListItem button>\n                <ListItemIcon>\n                  <ImportContactsRoundedIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"년도별 리스트\" />\n              </ListItem>\n              </Link> \n          </div>\n        <Divider />\n    </div>\n  );\n \n  return (\n    <Router>\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.AppBar}>\n        <Toolbar >\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer('left', true)} >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n            React Certificate\n          </Typography>\n          <div style={{ float: \"right\", marginRight: 5}}>{authenticated ? (\n                <LogoutButton logout={logout} />              \n                ) : (\n                <Link to=\"/login\">\n                    <div style={{fontSize: 16}}>Login</div>\n                </Link>\n                )}</div>\n          {/* <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton> */}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        open={state.left} onClose={toggleDrawer('left', false)}\n      >\n        {sideList('left')}\n        <ListSubheader inset>Saved reports</ListSubheader>\n        <ListItem button>\n          <ListItemIcon>\n            <AssignmentIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"user information\" />\n        </ListItem>\n      </Drawer>\n      <main >\n        <div />\n        {/* <Container maxWidth=\"lg\" className={classes.container}> */}\n         <Switch>\n            <Route exact path=\"/\" component={Homeview}/>\n            <Route\n              path=\"/login\"\n              render={props => (\n              <LoginForm authenticated={authenticated} login={login} {...props} />\n              )} />\n            <AuthRoute\n              authenticated={authenticated}\n              path=\"/Problem\"\n              render={props => <Problem user={user} {...props} /> }  />           \n            <AuthRoute\n              authenticated={authenticated}\n              path=\"/comment\"\n              render={props => <YearComment user={user} {...props} />} />               \n         </Switch>\n          <Box pt={6}>\n            <Copyright />\n          </Box>\n        {/* </Container>  */}\n      </main>\n    </div>\n    </Router>\n   \n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport Dash from './Dash';\nimport { Link, Route, BrowserRouter as Router } from 'react-router-dom'\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n    // <App />, \n    <Dash/>,\n    // <Router>\n    //     <Route exact path=\"/\" component={Dash} />  \n    //     {/* <Route path=\"/Problem\" component={Problem} />\n    //     <Route path=\"/login\" component={evaluation}/> */}\n    // </Router>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// const users = [\n//     { email: '1', name: '1' }\n//   ]\n  \nexport function signIn({ email, name }) {\n    const user = { email, name };\n    if (user === undefined) throw new Error();\n    console.log('로그인 성공!');\n    return user;\n  }"],"sourceRoot":""}